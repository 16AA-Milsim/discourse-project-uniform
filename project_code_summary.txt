Directory Tree Overview:
.
├── admin
├── app
│   └── controllers
│       └── admin
│           └── plugins
├── assets
│   ├── images
│   │   ├── berets
│   │   │   ├── Para_Beret.png
│   │   │   └── Recruit_Beret.png
│   │   ├── lanyards
│   │   │   ├── 1_platoon_lanyard.png
│   │   │   └── fsg_lanyard.png
│   │   ├── medals
│   │   ├── qualifications
│   │   │   ├── 1st_class_marksman.png
│   │   │   ├── paratrooper.png
│   │   │   └── sniper.png
│   │   ├── ranks
│   │   │   ├── cpl.png
│   │   │   ├── lcpl.png
│   │   │   └── sgt.png
│   │   ├── ribbons
│   │   │   ├── citation_1.png
│   │   │   ├── citation_2.png
│   │   │   ├── citation_3.png
│   │   │   ├── citation_4.png
│   │   │   ├── citation_5.png
│   │   │   ├── esprit_de_corps_gold.png
│   │   │   ├── esprit_de_corps.png
│   │   │   ├── long_service_medal_10_years.png
│   │   │   ├── long_service_medal_5_years.png
│   │   │   ├── long_service_medal.png
│   │   │   ├── mention_in_dispatches_1.png
│   │   │   ├── mention_in_dispatches_2.png
│   │   │   ├── mention_in_dispatches_3.png
│   │   │   ├── mention_in_dispatches_4.png
│   │   │   ├── mention_in_dispatches_5.png
│   │   │   ├── meritorious_service_medal.png
│   │   │   ├── mission_maker_first_class.png
│   │   │   ├── mission_maker_second_class.png
│   │   │   ├── mission_maker_third_class.png
│   │   │   ├── most_valuable_soldier.png
│   │   │   ├── recruiter_medal.png
│   │   │   ├── rro_excellence.png
│   │   │   ├── significant_effort_gold.png
│   │   │   ├── significant_effort.png
│   │   │   └── technical_excellence.png
│   │   └── uniforms
│   │       ├── ba_enlisted_uniform.png
│   │       └── ba_officer_uniform.png
│   ├── javascripts
│   │   ├── admin
│   │   └── discourse
│   │       ├── controllers
│   │       ├── initializers
│   │       │   └── intializers.js.es6
│   │       ├── project-uniform-route-map.js
│   │       ├── routes
│   │       ├── templates
│   │       │   └── admin
│   │       └── uniform-data.js
│   └── stylesheets
│       └── project-uniform.scss
├── config
│   ├── locales
│   │   ├── client.en.yml
│   │   ├── en.yml
│   │   └── server.en.yml
│   └── settings.yml
├── generate_code_summary.sh
├── plugin.rb
├── project_code_summary.txt
├── README.md
└── views
    └── admin
        └── project_uniform

29 directories, 49 files



==== FILE: ./plugin.rb ====
# name: project-uniform
# about: Adds a placeholder image to the user's summary page
# version: 0.1.0
# authors: Daniel Frederiksen

enabled_site_setting :project_uniform_enabled

add_admin_route 'project_uniform.title', 'project-uniform'

register_asset "stylesheets/project-uniform.scss"

Discourse::Application.routes.append do
  get '/admin/plugins/project-uniform' => 'admin/site_settings#index', constraints: StaffConstraint.new, defaults: { filter: 'project uniform' }
end



==== FILE: ./config/locales/en.yml ====
en:
  project_uniform:
    title: "Project Uniform"
    description: "Configure settings for the Project Uniform plugin."


==== FILE: ./config/locales/server.en.yml ====
en:
  site_settings:
    project_uniform_enabled: "Enable Project Uniform"
    project_uniform_admin_only: "Restrict Project Uniform output visibility to Admins Only"

    # Uniforms
    project_uniform_ba_officers_uniform: "BA Officers Uniform"
    project_uniform_ba_enlisted_uniform: "BA Enlisted Uniform"
    project_uniform_raf_officers_uniform: "RAF Officers Uniform"
    project_uniform_raf_enlisted_uniform: "RAF Enlisted Uniform"

    # British Army Ranks
    project_uniform_maj_rank: "Major"
    project_uniform_capt_rank: "Captain"
    project_uniform_lt_rank: "Lieutenant"
    project_uniform_2lt_rank: "Second Lieutenant"
    project_uniform_wo1_rank: "Warrant Officer Class 1"
    project_uniform_wo2_rank: "Warrant Officer Class 2"
    project_uniform_csgt_ssgt_rank: "Colour Sergeant / Staff Sergeant"
    project_uniform_sgt_rank: "Sergeant"
    project_uniform_cpl_bdr_rank: "Corporal / Bombardier"
    project_uniform_lcpl_lbdr_rank: "Lance Corporal / Lance Bombardier"
    project_uniform_pte_gnr_rank: "Private / Gunner"
    project_uniform_rec_rank: "Recruit"

    # RAF Ranks
    project_uniform_sqn_ldr_rank: "Squadron Leader"
    project_uniform_flt_lt_rank: "Flight Lieutenant"
    project_uniform_fg_off_rank: "Flying Officer"
    project_uniform_plt_off_rank: "Pilot Officer"
    project_uniform_fsacr_rank: "Flight Sergeant Aircrew"
    project_uniform_sacr_rank: "Sergeant Aircrew"

    # Berets
    project_uniform_para_beret: "Parachute Regiment Beret"
    project_uniform_recruit_beret: "Recruit Beret"

    # Cap Badges
    project_uniform_para_badge: "Parachute Regiment Cap Badge"
    project_uniform_ramc_badge: "Royal Army Medical Corps Cap Badge"
    project_uniform_rams_badge: "Royal Army Medical Services Cap Badge"

    # Lanyards
    project_uniform_hq_lanyard: "HQ Lanyard"
    project_uniform_1_platoon_lanyard: "1 Platoon Lanyard"
    project_uniform_2_platoon_lanyard: "2 Platoon Lanyard"
    project_uniform_fsg_lanyard: "FSG Lanyard"
    project_uniform_csm_group_lanyard: "CSM Group Lanyard"
    project_uniform_16csmr_lanyard: "16CSMR Lanyard"
    project_uniform_216ps_lanyard: "216PS Lanyard"
    project_uniform_fst_lanyard: "FST Lanyard"
    project_uniform_7rha_lanyard: "7RHA Lanyard"

    # Qualifications
    project_uniform_paratrooper_qualification: "Paratrooper Qualification"
    project_uniform_sniper_qualification: "Sniper Qualification"
    project_uniform_sharpshooter_qualification: "Sharpshooter Qualification"
    project_uniform_1st_class_marksman_qualification: "1st Class Marksman Qualification"

    # Awards
    project_uniform_meritorious_service_medal: "Meritorious Service Medal"
    project_uniform_most_valuable_soldier: "Most Valuable Soldier"
    project_uniform_mention_in_dispatches_5: "Mention in Dispatches 5"
    project_uniform_mention_in_dispatches_4: "Mention in Dispatches 4"
    project_uniform_mention_in_dispatches_3: "Mention in Dispatches 3"
    project_uniform_mention_in_dispatches_2: "Mention in Dispatches 2"
    project_uniform_mention_in_dispatches_1: "Mention in Dispatches 1"
    project_uniform_significant_effort_gold: "Significant Effort Gold"
    project_uniform_significant_effort: "Significant Effort"
    project_uniform_long_service_10_years: "Long Service and Good Conduct Medal - 10 Years"
    project_uniform_long_service_5_years: "Long Service and Good Conduct Medal - 5 Years"
    project_uniform_long_service: "Long Service and Good Conduct Medal"
    project_uniform_mission_maker_first_class: "Mission Maker First Class"
    project_uniform_mission_maker_second_class: "Mission Maker Second Class"
    project_uniform_mission_maker_third_class: "Mission Maker Third Class"
    project_uniform_technical_excellence: "Technical Excellence"
    project_uniform_rro_excellence: "RRO Excellence"
    project_uniform_recruiter_medal: "Recruiter Medal"
    project_uniform_esprit_de_corps_gold: "Esprit de Corps Gold"
    project_uniform_esprit_de_corps: "Esprit de Corps"
    project_uniform_citation_5: "Citation 5"
    project_uniform_citation_4: "Citation 4"
    project_uniform_citation_3: "Citation 3"
    project_uniform_citation_2: "Citation 2"
    project_uniform_citation_1: "Citation 1"

  js:
    project_uniform:
      title: "Project Uniform"



==== FILE: ./config/locales/client.en.yml ====
en:
  js:
    project_uniform:
      title: "Project Uniform"



==== FILE: ./config/settings.yml ====
plugins:
  project_uniform_enabled:
    type: boolean
    default: true
    client: true
  project_uniform_admin_only:
    type: boolean
    default: false
    client: true

  # Uniforms
  project_uniform_ba_officers_uniform:
    type: upload
    default: ""
    client: true
  project_uniform_ba_enlisted_uniform:
    type: upload
    default: ""
    client: true
  project_uniform_raf_officers_uniform:
    type: upload
    default: ""
    client: true
  project_uniform_raf_enlisted_uniform:
    type: upload
    default: ""
    client: true

  # British Army Ranks
  project_uniform_maj_rank:
    type: upload
    default: ""
    client: true
  project_uniform_capt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_lt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_2lt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_wo1_rank:
    type: upload
    default: ""
    client: true
  project_uniform_wo2_rank:
    type: upload
    default: ""
    client: true
  project_uniform_csgt_ssgt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_sgt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_cpl_bdr_rank:
    type: upload
    default: ""
    client: true
  project_uniform_lcpl_lbdr_rank:
    type: upload
    default: ""
    client: true
  project_uniform_pte_gnr_rank:
    type: upload
    default: ""
    client: true
  project_uniform_rec_rank:
    type: upload
    default: ""
    client: true

  # RAF Ranks
  project_uniform_sqn_ldr_rank:
    type: upload
    default: ""
    client: true
  project_uniform_flt_lt_rank:
    type: upload
    default: ""
    client: true
  project_uniform_fg_off_rank:
    type: upload
    default: ""
    client: true
  project_uniform_plt_off_rank:
    type: upload
    default: ""
    client: true
  project_uniform_fsacr_rank:
    type: upload
    default: ""
    client: true
  project_uniform_sacr_rank:
    type: upload
    default: ""
    client: true

  # Berets
  project_uniform_para_beret:
    type: upload
    default: ""
    client: true
  project_uniform_recruit_beret:
    type: upload
    default: ""
    client: true

  # Cap Badges
  project_uniform_para_badge:
    type: upload
    default: ""
    client: true
  project_uniform_rams_badge:
    type: upload
    default: ""
    client: true

  # Lanyards
  project_uniform_hq_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_1_platoon_lanyard:
    type: upload
    default: ""
    client: true

  project_uniform_2_platoon_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_fsg_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_csm_group_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_16csmr_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_216ps_lanyard:
    type: upload
    default: ""
    client: true

  project_uniform_fst_lanyard:
    type: upload
    default: ""
    client: true
  
  project_uniform_7rha_lanyard:
    type: upload
    default: ""
    client: true

  # Qualifications
  project_uniform_paratrooper_qualification:
    type: upload
    default: ""
    client: true

  project_uniform_sniper_qualification:
    type: upload
    default: ""
    client: true

  project_uniform_sharpshooter_qualification:
    type: upload
    default: ""
    client: true
  
  project_uniform_1st_class_marksman_qualification:
    type: upload
    default: ""
    client: true

  # Awards
  project_uniform_meritorious_service_medal:
    type: upload
    default: ""
    client: true

  project_uniform_most_valuable_soldier:
    type: upload
    default: ""
    client: true

  project_uniform_mention_in_dispatches_5:
    type: upload
    default: ""
    client: true

  project_uniform_mention_in_dispatches_4:
    type: upload
    default: ""
    client: true

  project_uniform_mention_in_dispatches_3:
    type: upload
    default: ""
    client: true

  project_uniform_mention_in_dispatches_2:
    type: upload
    default: ""
    client: true

  project_uniform_mention_in_dispatches_1:
    type: upload
    default: ""
    client: true

  project_uniform_significant_effort_gold:
    type: upload
    default: ""
    client: true

  project_uniform_significant_effort:
    type: upload
    default: ""
    client: true

  project_uniform_long_service_10_years:
    type: upload
    default: ""
    client: true

  project_uniform_long_service_5_years:
    type: upload
    default: ""
    client: true

  project_uniform_long_service:
    type: upload
    default: ""
    client: true

  project_uniform_mission_maker_first_class:
    type: upload
    default: ""
    client: true

  project_uniform_mission_maker_second_class:
    type: upload
    default: ""
    client: true

  project_uniform_mission_maker_third_class:
    type: upload
    default: ""
    client: true

  project_uniform_technical_excellence:
    type: upload
    default: ""
    client: true

  project_uniform_rro_excellence:
    type: upload
    default: ""
    client: true

  project_uniform_recruiter_medal:
    type: upload
    default: ""
    client: true

  project_uniform_esprit_de_corps_gold:
    type: upload
    default: ""
    client: true

  project_uniform_esprit_de_corps:
    type: upload
    default: ""
    client: true

  project_uniform_citation_5:
    type: upload
    default: ""
    client: true

  project_uniform_citation_4:
    type: upload
    default: ""
    client: true

  project_uniform_citation_3:
    type: upload
    default: ""
    client: true

  project_uniform_citation_2:
    type: upload
    default: ""
    client: true

  project_uniform_citation_1:
    type: upload
    default: ""
    client: true


==== FILE: ./assets/stylesheets/project-uniform.scss ====
.image-row-container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap; /* This ensures wrapping of items when more than 4 per row */
    width: 100%; /* Allow the container to be flexible */
    width: 940px; /* Optional: You can limit the maximum width for better control */
}

.image-container {
    flex: 1 1 calc(25%); /* Flex-basis 25% minus the gap to allow for four columns */
    box-sizing: border-box;
    margin-bottom: 20px; /* Optional: Adjust to control vertical spacing */
}

.image-upload-btn, .btn, .btn-danger {
    border: 1px solid rgba(0, 0, 0, 0);
    font-size: var(--font-0);
    line-height: normal;
    box-sizing: border-box;
    padding: .5em .65em;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    font-weight: normal;
    border-radius: var(--d-button-border-radius);
    transition: var(--d-button-transition);
    cursor: pointer;
}

.image-upload-btn {
    color: var(--primary);
    background-color: #6d6d6d;
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0));
    position: absolute;
    top: 5px;
    left: 5px;
    z-index: 10;
}

.btn-danger {
    color: var(--secondary);
    background-color: var(--danger);
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0));
}

.btn-danger:hover svg {
    fill: rgb(83, 83, 83); /* Change to your desired color */
}

.btn-danger .d-icon{
    color: #ccc;
}

.image-upload-btn svg, .btn svg {
    vertical-align: middle;
}

.image-upload-controls {
    position: absolute;
    top: 5px;
    right: 5px;
    display: flex;
    gap: 5px;
}

.hidden-upload-field {
    display: none;
}

.image-wrapper {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 10px;
}

.image-preview {
    flex: 0 0 auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 200px;
    height: 150px;
    overflow: hidden;
    background-color: #969696;
    box-sizing: border-box;
}

.image-preview__img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}



==== FILE: ./assets/javascripts/discourse/uniform-data.js ====
// uniform-data.js

export const ranks = [
  { name: 'Major', category: 'officer', imageKey: 'project_uniform_maj_rank' },
  { name: 'Captain', category: 'officer', imageKey: 'project_uniform_capt_rank' },
  { name: 'Lieutenant', category: 'officer', imageKey: 'project_uniform_lt_rank' },
  { name: 'Second_Lieutenant', category: 'officer', imageKey: 'project_uniform_2lt_rank' },
  { name: 'Acting_Second_Lieutenant', category: 'officer', imageKey: 'project_uniform_act_2lt_rank' },
  { name: 'Warrant_Officer_Class_1', category: 'enlisted', imageKey: 'project_uniform_wo1_rank' },
  { name: 'Warrant_Officer_Class_2', category: 'enlisted', imageKey: 'project_uniform_wo2_rank' },
  { name: 'Colour_Sergeant', category: 'enlisted', imageKey: 'project_uniform_csgt_rank' },
  { name: 'Staff_Sergeant', category: 'enlisted', imageKey: 'project_uniform_ssgt_rank' },
  { name: 'Sergeant', category: 'enlisted', imageKey: 'project_uniform_sgt_rank' },
  { name: 'Corporal', category: 'enlisted', imageKey: 'project_uniform_cpl_bdr_rank' },
  { name: 'Lance_Corporal', category: 'enlisted', imageKey: 'project_uniform_lcpl_lbdr_rank' },
  { name: 'Private', category: 'enlisted', imageKey: 'project_uniform_pte_rank' },
  { name: 'Recruit', category: 'enlisted', imageKey: 'project_uniform_rec_rank' }
];

// Derived Data
export const officerRanks = ranks.filter(rank => rank.category === 'officer').map(rank => rank.name);
export const enlistedRanks = ranks.filter(rank => rank.category === 'enlisted').map(rank => rank.name);

// Rank to Image Mapping
export const rankToImageMap = Object.fromEntries(
  ranks.map(rank => [rank.name, rank.imageKey])
);

export const lanyardGroups = [
  { name: '1_Platoon_IC', imageKey: 'project_uniform_1_platoon_lanyard' },
  { name: '1_Platoon_2IC', imageKey: 'project_uniform_1_platoon_lanyard' },
  { name: '1-1_Section', imageKey: 'project_uniform_1_platoon_lanyard' },
  { name: '1-2_Section', imageKey: 'project_uniform_1_platoon_lanyard' },
  { name: '1-3_Section', imageKey: 'project_uniform_1_platoon_lanyard' },
  { name: 'Fire_Support_Group_IC', imageKey: 'project_uniform_fsg_lanyard' },
  { name: 'Fire_Support_Group_2IC', imageKey: 'project_uniform_fsg_lanyard' },
  { name: 'Fire_Support_Group', imageKey: 'project_uniform_fsg_lanyard' }
];

// Lanyard to Image Mapping
export const lanyardToImageMap = Object.fromEntries(
  lanyardGroups.map(group => [group.name, group.imageKey])
);

export const qualifications = [
  { name: 'Paratrooper', imageKey: 'project_uniform_paratrooper_qualification', restrictedRanks: [] },
  { name: 'Sniper', imageKey: 'project_uniform_sniper_qualification', restrictedRanks: ['Warrant_Officer_Class_2', 'Warrant_Officer_Class_1', ...officerRanks] },
  { name: 'Sharpshooter', imageKey: 'project_uniform_sharpshooter_qualification', restrictedRanks: ['Warrant_Officer_Class_2', 'Warrant_Officer_Class_1', ...officerRanks] },
  { name: '1st Class Marksman', imageKey: 'project_uniform_1st_class_marksman_qualification', restrictedRanks: ['Warrant_Officer_Class_2', 'Warrant_Officer_Class_1', ...officerRanks] }
];

// Qualifications to Image Mapping
export const qualificationToImageMap = Object.fromEntries(
  qualifications.map(qualification => [qualification.name, qualification.imageKey])
);

export const awards = [
  { name: "Meritorious Service Medal", imageKey: "project_uniform_meritorious_service_medal" },
  { name: "Most Valuable Soldier", imageKey: "project_uniform_most_valuable_soldier" },
  { name: "Mention in Dispatches 5", imageKey: "project_uniform_mention_in_dispatches_5" },
  { name: "Mention in Dispatches 4", imageKey: "project_uniform_mention_in_dispatches_4" },
  { name: "Mention in Dispatches 3", imageKey: "project_uniform_mention_in_dispatches_3" },
  { name: "Mention in Dispatches 2", imageKey: "project_uniform_mention_in_dispatches_2" },
  { name: "Mention in Dispatches 1", imageKey: "project_uniform_mention_in_dispatches_1" },
  { name: "Significant Effort Gold", imageKey: "project_uniform_significant_effort_gold" },
  { name: "Significant Effort", imageKey: "project_uniform_significant_effort" },
  { name: "Long Service and Good Conduct Medal 10 Years", imageKey: "project_uniform_long_service_10_years" },
  { name: "Long Service and Good Conduct Medal 5 Years", imageKey: "project_uniform_long_service_5_years" },
  { name: "Long Service and Good Conduct Medal", imageKey: "project_uniform_long_service" },
  { name: "Mission Maker First Class", imageKey: "project_uniform_mission_maker_first_class" },
  { name: "Mission Maker Second Class", imageKey: "project_uniform_mission_maker_second_class" },
  { name: "Mission Maker Third Class", imageKey: "project_uniform_mission_maker_third_class" },
  { name: "Technical Excellence", imageKey: "project_uniform_technical_excellence" },
  { name: "RRO Excellence", imageKey: "project_uniform_rro_excellence" },
  { name: "Recruiter Medal", imageKey: "project_uniform_recruiter_medal" },
  { name: "Esprit de Corps Gold", imageKey: "project_uniform_esprit_de_corps_gold" },
  { name: "Esprit de Corps", imageKey: "project_uniform_esprit_de_corps" },
  { name: "Citation 5", imageKey: "project_uniform_citation_5" },
  { name: "Citation 4", imageKey: "project_uniform_citation_4" },
  { name: "Citation 3", imageKey: "project_uniform_citation_3" },
  { name: "Citation 2", imageKey: "project_uniform_citation_2" },
  { name: "Citation 1", imageKey: "project_uniform_citation_1" } 
];


==== FILE: ./assets/javascripts/discourse/project-uniform-route-map.js ====
export default {
  resource: 'admin.adminPlugins',
  path: '/plugins',
  map() {
    // No routes defined since we are removing the admin page for project-uniform
  }
};



==== FILE: ./assets/javascripts/discourse/initializers/intializers.js.es6 ====
// initializers.js.es6

import { withPluginApi } from 'discourse/lib/plugin-api';
import { ranks, officerRanks, enlistedRanks, lanyardGroups, lanyardToImageMap, qualifications, rankToImageMap, qualificationToImageMap, awards } from 'discourse/plugins/project-uniform/discourse/uniform-data';

export default {
  name: 'project-uniform',
  initialize(container) {
    withPluginApi('0.8.26', api => {
      const siteSettings = container.lookup('site-settings:main');

      api.onPageChange(url => {
        if (url && url.includes('/u/') && url.includes('/summary')) {
          const container = document.querySelector('.user-content');
          if (container && !document.querySelector('.project-uniform-placeholder')) {
            // Check if admin-only mode is enabled
            if (siteSettings.project_uniform_admin_only) {
              const currentUser = Discourse.User.current();
              if (!currentUser || !currentUser.admin) {
                console.log('Project Uniform: Admin-only mode is enabled. Hiding uniforms for non-admin users.');
                return;
              }
            }

            // Extract username from URL
            const username = url.split('/u/')[1].split('/')[0];

            // Fetch data from both APIs
            Promise.all([
              fetch(`/u/${username}.json`).then(response => response.ok ? response.json() : Promise.reject(response.statusText)),
              fetch(`/user-badges/${username}.json`).then(response => response.ok ? response.json() : Promise.reject(response.statusText))
            ])
              .then(([userSummaryData, badgeData]) => {
                console.log('Fetched user data:', userSummaryData);
                console.log('Fetched badge data:', badgeData);
            
                if (userSummaryData?.user && badgeData?.user_badges) {
                  const { user } = userSummaryData;
                  const groups = user.groups || [];
                  const badgeNames = badgeData.user_badges
                    .map(ub => {
                      const badge = badgeData.badges.find(b => b.id === ub.badge_id);
                      return badge ? badge.name : null;
                    })
                    .filter(name => name); // Filter out invalid badge names
            
                  // Display user information
                  const userInfo = createUserInfo(groups, badgeNames);
                  container.prepend(userInfo);
            
                  // Prepare images for rendering
                  prepareAndRenderImages(groups, badgeData.user_badges, badgeData.badges, siteSettings, container);
                }
              })
              .catch(error => console.error('Error fetching user data:', error));
          }
        }
      });
    });
  }
};

function createUserInfo(groups, badgeNames) {
  const userInfo = document.createElement('div');
  userInfo.style.textAlign = 'center';
  userInfo.style.marginBottom = '10px';
  userInfo.className = 'project-uniform-user-info';

  const groupsElement = document.createElement('p');
  groupsElement.textContent = `Groups: ${groups.map(group => group.name).join(', ') || 'None'}`;

  const badgesElement = document.createElement('p');
  badgesElement.textContent = `Badges: ${badgeNames.length > 0 ? badgeNames.join(', ') : 'None'}`;

  userInfo.appendChild(groupsElement);
  userInfo.appendChild(badgesElement);

  return userInfo;
}

function prepareAndRenderImages(groups, userBadges, badges, siteSettings, container) {
  let backgroundImageUrl = '';
  const foregroundImageUrls = []; // Array to hold multiple foreground images

  // Determine the background image based on the highest priority rank
  if (groups.some(group => officerRanks.includes(group.name))) {
    backgroundImageUrl = formatUrl(siteSettings.project_uniform_ba_officers_uniform);
  } else if (groups.some(group => enlistedRanks.includes(group.name))) {
    backgroundImageUrl = formatUrl(siteSettings.project_uniform_ba_enlisted_uniform);
  }

  // Add beret images
  if (groups.some(group => group.name === 'Recruit')) {
    foregroundImageUrls.push(formatUrl(siteSettings.project_uniform_recruit_beret));
  } else if (groups.some(group => enlistedRanks.includes(group.name) || officerRanks.includes(group.name))) {
    foregroundImageUrls.push(formatUrl(siteSettings.project_uniform_para_beret));
  }

  // Add rank image
  const highestRank = ranks.find(rank => groups.some(group => group.name === rank.name));
  if (highestRank) {
    const imageKey = highestRank.imageKey;
    if (imageKey) {
      foregroundImageUrls.push(formatUrl(siteSettings[imageKey]));
    }
  }

  // Add lanyard-specific images using lanyardToImageMap
  groups.forEach(group => {
    const imageKey = lanyardToImageMap[group.name];
    if (imageKey) {
      foregroundImageUrls.push(formatUrl(siteSettings[imageKey]));
    }
  });

  // Add qualification-specific images and awards using badge matching
  userBadges.forEach(ub => {
    const badge = badges.find(b => b.id === ub.badge_id); // Match badge_id
    if (!badge) {
      console.warn('Skipping invalid badge:', ub);
      return; // Skip if no matching badge found
    }

    const badgeName = badge.name;

    // Add qualifications
    const qualification = qualifications.find(q => q.name === badgeName);
    const imageKey = qualification?.imageKey;

    if (imageKey) {
      const isRestricted = qualification?.restrictedRanks?.includes(highestRank?.name);
      if (!isRestricted) {
        foregroundImageUrls.push(formatUrl(siteSettings[imageKey]));
      }
    }

    // Add awards
    const award = awards.find(a => a.name === badgeName);
    if (award) {
      foregroundImageUrls.push(formatUrl(siteSettings[award.imageKey]));
    }
  });

  // Filter out invalid URLs
  const validForegroundImageUrls = foregroundImageUrls.filter(url => url);

  // Log selected images for debugging
  console.log('Background Image URL:', backgroundImageUrl);
  console.log('Foreground Image URLs:', validForegroundImageUrls);

  // Create and merge images on a canvas
  if (backgroundImageUrl && validForegroundImageUrls.length > 0) {
    mergeImagesOnCanvas(container, backgroundImageUrl, validForegroundImageUrls);
  }
}

function formatUrl(url) {
  if (!url) return ''; // Handle undefined or null URLs
  return url.startsWith('http') || url.startsWith('/')
    ? url
    : `${window.location.origin}/${url}`;
}

function mergeImagesOnCanvas(container, backgroundImageUrl, foregroundImageUrls) {
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');

  const bgImage = new Image();
  const fgImages = foregroundImageUrls.map(url => new Image());
  let imagesLoaded = 0;

  const onImageLoad = () => {
    imagesLoaded++;
    if (imagesLoaded === 1 + fgImages.length) {
      // Set canvas size and draw images
      canvas.width = bgImage.naturalWidth || 1;
      canvas.height = bgImage.naturalHeight || 1;

      // Add drop shadow for the background image
      ctx.save(); // Save the current canvas state
      ctx.shadowColor = 'rgba(0, 0, 0, 0.4)'; // Shadow color
      ctx.shadowBlur = 10; // Shadow blur radius
      ctx.shadowOffsetX = 1; // Horizontal shadow offset
      ctx.shadowOffsetY = 1; // Vertical shadow offset

      // Draw the background image with shadow
      ctx.drawImage(bgImage, 0, 0, canvas.width, canvas.height);
      ctx.restore(); // Restore canvas state to prevent shadow on other drawings

      // Draw foreground images
      fgImages.forEach(fgImage => {
        const fgWidth = fgImage.naturalWidth || 0;
        const fgHeight = fgImage.naturalHeight || 0;
        const fgX = (canvas.width - fgWidth) / 2;
        const fgY = (canvas.height - fgHeight) / 2;
        if (fgWidth > 0 && fgHeight > 0) {
          ctx.drawImage(fgImage, fgX, fgY, fgWidth, fgHeight);
        }
      });

      // Display the merged image
      const mergedImage = createImageElement(canvas.toDataURL('image/png'), 'Merged Project Uniform Image');
      container.prepend(mergedImage);
    }
  };

  bgImage.onload = onImageLoad;
  fgImages.forEach(fgImage => (fgImage.onload = onImageLoad));

  bgImage.src = backgroundImageUrl || '';
  fgImages.forEach((fgImage, index) => (fgImage.src = foregroundImageUrls[index] || ''));
}

function createImageElement(src, alt) {
  const img = document.createElement('img');
  img.src = src;
  img.alt = alt;
  img.style.display = 'block';
  img.style.margin = '0 auto';
  return img;
}



